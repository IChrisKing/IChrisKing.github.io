= 原网权限管理策略 = 

= 1 作用点 =
数据包入口和出口各有一个审核点，各有一套权限策略。
[[br]]

= 2 策略规则 =

== 2.1 规则格式 ==

=== 2.1.1 普通规则格式 ===
{{{
源信息：目的信息：协议类型：会话状态：动作
规则主要由五个部分组成。
(1) 源信息
源信息可以是源ip，也可以是源ip：源端口。

(2) 目的信息
目的信息可以是目的ip，也可以是目的ip：目的端口。

(3) 协议类型
协议类型包括TCP、UDP等不同的类型。

(4) 会话状态
会话状态包括NEW、ESTABLISH、RELATED，INVALID四种。
对于TCP来说，发起方发出第一个包时，为NEW状态，此后整个握手过程中状态为RELATED，握手结束，进入通讯后，变为ESTABLISH状态。
对于UDP和其他协议来说，发起方发出第一个包时，为NEW状态，当对方回复后，session state变为ESTABLISH。

(5) 动作
在ACCEPT或DROP中二选一，表示允许数据包通过或拒绝数据包通过。
}}}

=== 2.1.2 带有HashSet的规则 ===
{{{
HashSet名：协议类型：会话状态：动作

(1) HashSet名
HashSet的名称。

(2) 协议类型
协议类型包括TCP、UDP等不同的类型。

(3) 会话状态
会话状态包括NEW、ESTABLISH、RELATED，INVALID四种。
对于TCP来说，发起方发出第一个包时，为NEW状态，此后整个握手过程中状态为RELATED，握手结束，进入通讯后，变为ESTABLISH状态。
对于UDP和其他协议来说，发起方发出第一个包时，为NEW状态，当对方回复后，session state变为ESTABLISH。

(4) 动作
在ACCEPT或DROP中二选一，表示允许数据包通过或拒绝数据包通过。
}}}

= 3 规则示例 =
== 3.1 普通规则 ==
Policy_rule_ops()
=== 参数 ===
{{{
参数名：location
参数类型：String
参数范围：INPUT/OUTPUT
}}}

{{{
参数名：op
参数类型：String
参数范围：ADD/REMOVE
}}}

{{{
参数名：src
参数类型：String
参数范围：ip地址
        0.0.0.0
        0.0.0.0:0
        fd00::1
        fc4f:630d:e499:8f5b:c49f:6e6b:01ae:3120
}}}

{{{
参数名：dst
参数类型：String
参数范围：ip地址
        0.0.0.0
        0.0.0.0:0
        fd00::1
        fc4f:630d:e499:8f5b:c49f:6e6b:01ae:3120
}}}

{{{
参数名：protocol
参数类型：String
参数范围：TCP/UDP/ANY
}}}

{{{
参数名：state
参数类型：String
参数范围：NEW/ESTABLIST/RELATED/INVALID
}}}

{{{
参数名：action
参数类型：String
参数范围：ACCEPT/DROP
}}}

=== 示例1.仅包括ip信息的规则 ===
增加规则，允许1.1.1.1向2.2.2.2发起TCP连接
{{{
{
        "location":"INPUT"
        "op":"ADD"
        "src": "1.1.1.1",
        "dst": "2.2.2.2",
        "protocol": TCP,
        "state": NEW,
        "action": ACCEPT
}
}}}
{{{
{
        "location":"OUTPUT"
        "op":"ADD"
        "src": "1.1.1.1",
        "dst": "2.2.2.2",
        "protocol": TCP,
        "state": NEW,
        "action": ACCEPT
}
}}}

=== 示例2.加上端口（暂不支持加端口） ===
删除禁止1.1.1.1的1111向2.2.2.2的2222发起UDP连接的规则
{{{
{
        "location":"INPUT"
        "op":"REMOVE"
        "src": "1.1.1.1：1111",
        "dst": "2.2.2.2：2222",
        "protocol": UDP,
        "state": NEW,
        "action": DROP
}
}}}
{{{
{
        "location":"OUTPUT"
        "op":"REMOVE"
        "src": "1.1.1.1：1111",
        "dst": "2.2.2.2：2222",
        "protocol": UDP,
        "state": NEW,
        "action": DROP
}
}}}

== 3.2 使用HashSet ==
以只控制源ip的HashSet为例,名为TestHashSet，加入1.1.1.1
=== 1 创建HashSet ===
创建HashSet时需要指明HashSet的类型，即哪些字段需要比较。使用一个4位2进制数，每一位代表以下一项，需要对比的设1，ANY设0 [[br]]
源ip  源端口  目的ip  目的端口  [[br]]

Policy_hashset_create()
==== 参数 ====
{{{
参数名：type
参数类型：int
参数范围：二进制1000 十进制8 仅比较源ip
        二进制0010 十进制2 仅比较目的ip
        以此类推 
}}}

{{{
参数名：name
参数类型：String
}}}

=== 2 向HashSet中增加/删除内容 ===
根据HashSet的类型，需要比较的项传入数值，其他项传入ANY。[[br]]
Policy_hashsetitem_ops();
==== 参数 ====
{{{
参数名：name
参数类型：String
}}}

{{{
参数名：op
参数类型：String
参数范围：ADD/REMOVE
}}}

{{{
参数名：src
参数类型：String
参数范围：ip地址
        0.0.0.0
        0.0.0.0:0
        fd00::1
        fc4f:630d:e499:8f5b:c49f:6e6b:01ae:3120
}}}

{{{
参数名：dst
参数类型：String
参数范围：ip地址
        0.0.0.0
        0.0.0.0:0
        fd00::1
        fc4f:630d:e499:8f5b:c49f:6e6b:01ae:3120
}}}

=== 3 写一条使用HashSet的规则 ===

Policy_hashsetrule_ops()
=== 参数 ===
{{{
参数名：location
参数类型：String
参数范围：INPUT/OUTPUT
}}}

{{{
参数名：op
参数类型：String
参数范围：ADD/REMOVE
}}}

{{{
参数名：name
参数类型：String
}}}

{{{
参数名：protocol
参数类型：String
参数范围：TCP/UDP/ANY
}}}

{{{
参数名：state
参数类型：String
参数范围：NEW/ESTABLIST/RELATED/INVALID
}}}

{{{
参数名：action
参数类型：String
参数范围：ACCEPT/DROP
}}}

=== 示例1.增加规则，允许TestHashSet中的地址发起UDP连接 ===
{{{
{
        "location":"INPUT"
        "op":"ADD"
        "hashset": "TestHashSet",
        "protocol": UDP,
        "state": NEW,
        "action": ACCEPT
}
}}}
{{{
{
        "location":"OUTPUT"
        "op":"ADD"
        "hashset": "TestHashSet",
        "protocol": UDP,
        "state": NEW,
        "action": ACCEPT
}
}}}

== 3.3 默认规则 ==
当所有规则都匹配不成功时，启用默认规则。
Policy_default
参数
{{{
参数名：default
参数类型：String
参数范围：ACCEPT/DROP
}}}

[[br]]

= 4 规则匹配顺序 = 
{{{
1. 按照从上到下的顺序，匹配规则
2. 默认规则
}}}

= 5 整体策略示例 =
== 5.1 默认允许的策略 ==
{{{
1.Policy_default 设置默认ACCEPT

2.某地址c，我可以主动连接它，它不可以主动连接我。
  INPUT：ADD：C：MYAddr：协议：NEW：DROP
  OUTPUT：ADD：C：MYAddr：协议：NEW：DROP

3.某地址d，它可以主动连接我，我不可以主动连接它。
  OUTPUT：ADD：MYAddr：d：协议：NEW：DROP

4.某一些地址e1,e2,e3...，作为内网地址
  外界不能主动连接内网
  创建一个HashSet，名为inner_dst_set，类型0010
  把内网ip加进去
  INPUT：ADD：inner_dst_set:协议：NEW:DROP
  OUTPUT：ADD：inner_dst_set:协议：NEW:DROP

5.某一些地址f1,f2,f3...作为危险的外网地址
  不可以主动连接它们
  创建一个HashSet，名为outer_src_set，类型1000
  把ip加进去
  OUTPUT：ADD：outer_scr_set:协议：NEW:DROP
}}}

== 5.2 默认拒绝的策略 ==
{{{
1.Policy_default 设置默认DROP

2.设置允许所有ESTABLIST和RELATED状态的会话通讯
  INPUT：ADD：ANY：ANY：ANY：ESTABLISH：ACCEPT
  OUTPUT：ADD：ANY：ANY：ANY：RELATED：ACCEPT

2.某地址c，我可以主动连接它，它不可以主动连接我。
  OUTPUT：ADD：MYAddr：c：ANY：NEW：ACCEPT

3.某地址d，它可以主动连接我，我不可以主动连接它。
  INPUT：ADD：d：MYAddr：ANY：NEW：ACCEPT

4.某一些地址e1,e2,e3...，作为内网地址
  内网可以主动连接外网
  创建一个HashSet，名为inner_src_set，类型1000
  把内网ip加进去
  INPUT：ADD：inner_scr_set:协议：NEW:ACCEPT
  OUTPUT：ADD：inner_scr_set:协议：NEW:ACCEPT

5.某一些地址f1,f2,f3...作为特殊的外网地址
  可以主动连接其他点
  创建一个HashSet，名为outer_src_set，类型1000
  把ip加进去
  INPUT：ADD：outer_src_set:协议：NEW:ACCEPT
  OUTPUT：ADD：outer_src_set:协议：NEW:ACCEPT
}}}

